mixin frame_controls(control, css_class)
	div(class="#{css_class} #{control.class}") 
		div
			span= control.name + " "

			if control.editable 
				span.badge #{control.value} #{control.label}
			else
				span.badge #{control.value} #{control.label}

		//- need to have the controller inside of the actual class so we know whats up!
		//- controller goes here
		if control.editable
			input(type= 'range', class="span2", data-id= control.class, min= control.min, max= control.max, step='1', value= control.value)		

section.container
	.row
		#momentum-play-all.span2.offset5.play-button
			img(src='images/versionless/play.png')

	#momentum_demo.content	
		each project in canvas
			div
				.row.frame-header
					h4.span11= project.header
					//.exit
					button.close.close-button
						&times; &nbsp;

				//- canvas is paper-js driven!
				.momentum-content					

					//- controller overlays the canvas and is responsible for controls!
					.controller										
						.row
							.span2
								mixin frame_controls(project.controls.frameVelocity, "")							
								mixin frame_controls(project.controls.redMass, "")
							mixin frame_controls(project.controls.redVelocity, "span2")
							.span4.play-button
									img(src='images/versionless/play.png')
							mixin frame_controls(project.controls.blueMass, "span2")
							mixin frame_controls(project.controls.blueVelocity, "span2")

					canvas(data-main= project.header)

